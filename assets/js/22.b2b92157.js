(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{424:function(t,a,e){"use strict";e.r(a);var s=e(33),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"installation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),e("p",[t._v("The "),e("a",{attrs:{href:"https://hex.pm/packages/rdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("RDF.ex Hex package"),e("OutboundLink")],1),t._v(" can be installed as usual, by adding "),e("code",[t._v("rdf")]),t._v(" to your list of dependencies in "),e("code",[t._v("mix.exs")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-elixir extra-class"},[e("pre",{pre:!0,attrs:{class:"language-elixir"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" deps "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":rdf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~> 2.1"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),e("p",[t._v("If you want to read or write "),e("a",{attrs:{href:"http://www.w3.org/TR/json-ld/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSON-LD"),e("OutboundLink")],1),t._v(", you also have to add "),e("code",[t._v("json_ld")]),t._v(" to your dependencies for the separate "),e("a",{attrs:{href:"https://hex.pm/packages/json_ld",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSON-LD.ex"),e("OutboundLink")],1),t._v(" package.\nIf you want to read or write "),e("a",{attrs:{href:"http://www.w3.org/TR/rdf-syntax-grammar/",target:"_blank",rel:"noopener noreferrer"}},[t._v("RDF-XML"),e("OutboundLink")],1),t._v(", you have to add "),e("code",[t._v("rdf_xml")]),t._v(" to your dependencies for the separate "),e("a",{attrs:{href:"https://hex.pm/packages/rdf_xml",target:"_blank",rel:"noopener noreferrer"}},[t._v("RDF-XML.ex"),e("OutboundLink")],1),t._v(" package.")]),t._v(" "),e("div",{staticClass:"language-elixir extra-class"},[e("pre",{pre:!0,attrs:{class:"language-elixir"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" deps "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":rdf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~> 2.1"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":rdf_xml")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~> 1.2"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":json_ld")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~> 1.0"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),e("h2",{attrs:{id:"http-client-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-client-configuration"}},[t._v("#")]),t._v(" HTTP client configuration")]),t._v(" "),e("p",[t._v("JSON-LD.ex uses "),e("a",{attrs:{href:"https://github.com/teamon/tesla",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tesla"),e("OutboundLink")],1),t._v(", an abstraction over different HTTP client libraries. This allows you to use the HTTP client of your choice, as long as a Tesla adapter exists. Currently httpc, "),e("a",{attrs:{href:"https://github.com/benoitc/hackney",target:"_blank",rel:"noopener noreferrer"}},[t._v("hackney"),e("OutboundLink")],1),t._v(" or "),e("a",{attrs:{href:"https://github.com/cmullaparthi/ibrowse",target:"_blank",rel:"noopener noreferrer"}},[t._v("ibrowse"),e("OutboundLink")],1),t._v(", "),e("a",{attrs:{href:"https://github.com/ninenines/gun",target:"_blank",rel:"noopener noreferrer"}},[t._v("gun"),e("OutboundLink")],1),t._v(", "),e("a",{attrs:{href:"https://github.com/elixir-mint/mint",target:"_blank",rel:"noopener noreferrer"}},[t._v("mint"),e("OutboundLink")],1),t._v(" and "),e("a",{attrs:{href:"https://github.com/sneako/finch",target:"_blank",rel:"noopener noreferrer"}},[t._v("finch"),e("OutboundLink")],1),t._v(" are supported. See "),e("a",{attrs:{href:"https://github.com/teamon/tesla#adapters",target:"_blank",rel:"noopener noreferrer"}},[t._v("this list"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("Without further configuration, the built-in Erlang httpc is used.")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("It is strongly advised to use one of the alternatives, since httpc has a "),e("a",{attrs:{href:"https://github.com/teamon/tesla/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3Ahttpc+",target:"_blank",rel:"noopener noreferrer"}},[t._v("lot of issues"),e("OutboundLink")],1),t._v(" and will very likely cause troubles sooner or later.")])]),t._v(" "),e("p",[t._v("If you want to use another client library, you'll have to add it to your list of dependencies in "),e("code",[t._v("mix.exs")]),t._v(" and configure Tesla to use it.")]),t._v(" "),e("p",[t._v("So, for hackney you'll have to add "),e("code",[t._v("hackney")]),t._v(" to "),e("code",[t._v("mix.exs")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-elixir extra-class"},[e("pre",{pre:!0,attrs:{class:"language-elixir"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" deps "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":json_ld")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~> 1.0"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":hackney")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~> 1.6"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),e("p",[t._v("and add this line to your "),e("code",[t._v("config.exs")]),t._v(" file (or environment specific configuration):")]),t._v(" "),e("div",{staticClass:"language-elixir extra-class"},[e("pre",{pre:!0,attrs:{class:"language-elixir"}},[e("code",[t._v("config "),e("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":tesla")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":adapter")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Tesla")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Adapter")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token module class-name"}},[t._v("Hackney")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);